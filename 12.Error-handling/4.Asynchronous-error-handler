const express = require("express");
const axios = require("axios");
const app = express();


const PORT = 3000;


//Route to fetch post
app.get("/posts", async (req, res, next) => {
  try {
    const response = await axios.get(
      "https://jsonplaceholder.typicode.com/posts"
    );
    res.json(response.data);
  } catch (error) {
    next(error);
  }
});


//Regular Route
app.get("/", (req, res) => {
  res.json({
    message: "Welcome to built in error handling !",
  });
});


//Custom error handling middleware
app.use((err, req, res, next) => {
  //check if its an axios error
  if (err.response) {
    res.status(err.response.status).json(err.response.data);
  } else if (err.request) {
    res.status(503).json({ message: "Service Unavailable" });
  } else {
    res.status(500).json({ message: "Something went wrong !" });
  }
});


//start the server
app.listen(PORT, console.log(`Server is running ${PORT}`));
 